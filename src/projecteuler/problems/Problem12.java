/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projecteuler.problems;

import java.util.ArrayList;

/**
 *
 * @author Branimir
 */
public class Problem12 implements ProjectEulerProblem {

    public Problem12() {
    }

    @Override
    public String description() {
        return "Problem 12: The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:\n"
                + "\n"
                + "1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...\n"
                + "\n"
                + "Let us list the factors of the first seven triangle numbers:\n"
                + "\n"
                + "     1: 1\n"
                + "     3: 1,3\n"
                + "     6: 1,2,3,6\n"
                + "    10: 1,2,5,10\n"
                + "    15: 1,3,5,15\n"
                + "    21: 1,3,7,21\n"
                + "    28: 1,2,4,7,14,28\n"
                + "\n"
                + "We can see that 28 is the first triangle number to have over five divisors.\n"
                + "\n"
                + "What is the value of the first triangle number to have over five hundred divisors?";
    }

    @Override
    public String solve() {
        long currentTriangleNumber = 0L;
        for(long i=1L; numberOfDiversors(currentTriangleNumber) <= 500; i++)
            currentTriangleNumber += i;
        
        return String.valueOf(currentTriangleNumber);
    }  
    
    private int numberOfDiversors(long n) {
        int diversors = 0;
        long sqrt = (long)Math.sqrt(n);
        for(long i = 1L; i <= sqrt; i++) {
            if(n % i == 0) {
                if(i==sqrt) diversors++;
                else diversors+=2;
            }
        }
        return diversors;
    }
    
}
